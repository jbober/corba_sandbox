// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.0.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:449

#ifndef _TAO_IDL_TIMES_SEUKKG_H_
#define _TAO_IDL_TIMES_SEUKKG_H_


#include "timeC.hh"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/Collocation_Proxy_Broker.h"
#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_sh.cpp:78

class POA_Time;
typedef POA_Time *POA_Time_ptr;

class  POA_Time
  : public virtual PortableServer::ServantBase
{
protected:
  POA_Time (void);

public:
  // Useful for template programming.
  typedef ::Time _stub_type;
  typedef ::Time_ptr _stub_ptr_type;
  typedef ::Time_var _stub_var_type;

  POA_Time (const POA_Time& rhs);
  virtual ~POA_Time (void);

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  static void _is_a_skel (
      TAO_ServerRequest & req,
      void * servant_upcall,
      void * servant);
  
  static void _non_existent_skel (
      TAO_ServerRequest & req,
      void * servant_upcall,
      void * servant);
  
  static void _interface_skel (
      TAO_ServerRequest & req,
      void * servant_upcall,
      void * servant);
  
  static void _component_skel (
      TAO_ServerRequest & req,
      void * servant_upcall,
      void * servant);
  
  static void _repository_id_skel (
      TAO_ServerRequest & req,
      void * servant_upcall,
      void * servant);
  
  virtual void _dispatch (
      TAO_ServerRequest & req,
      void * servant_upcall);
  
  ::Time *_this (void);
  
  virtual const char* _interface_repository_id (void) const;

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:41

  virtual ::TimeOfDay get_gmt (void) = 0;

  static void get_gmt_skel (
      TAO_ServerRequest & server_request,
      void * servant_upcall,
      void * servant);
};
#if defined (__ACE_INLINE__)
#include "timeS.inl"
#endif /* defined INLINE */

#endif /* ifndef */

